<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="User" failures="0" tests="5" name="Default test" time="0.825" errors="0" timestamp="2024-04-30T21:11:11 IST">
  <testcase classname="utils.ExtentReport" name="@BeforeClass startTestCase" time="0.003">
    <failure type="java.lang.IllegalArgumentException" message="testName cannot be null or empty">
      <![CDATA[java.lang.IllegalArgumentException: testName cannot be null or empty
at com.aventstack.extentreports.ExtentTest.<init>(ExtentTest.java:80)
at com.aventstack.extentreports.ExtentTest.<init>(ExtentTest.java:100)
at com.aventstack.extentreports.ExtentReports.createTest(ExtentReports.java:238)
at utils.ExtentReport.startTestCase(ExtentReport.java:69)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:176)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:122)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @BeforeClass startTestCase -->
  <testcase classname="base.ProjectSpecificMethods" name="@BeforeMethod preCondition" time="-1.714491671308E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod preCondition -->
  <testcase classname="base.ProjectSpecificMethods" name="@AfterMethod postCondition" time="-1.714491671342E9">
    <skipped/>
  </testcase> <!-- @AfterMethod postCondition -->
  <testcase classname="base.ProjectSpecificMethods" name="@BeforeMethod preCondition" time="-1.714491671354E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod preCondition -->
  <testcase classname="base.ProjectSpecificMethods" name="@AfterMethod postCondition" time="-1.714491671384E9">
    <skipped/>
  </testcase> <!-- @AfterMethod postCondition -->
  <testcase classname="base.ProjectSpecificMethods" name="@BeforeMethod preCondition" time="-1.71449167139E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod preCondition -->
  <testcase classname="base.ProjectSpecificMethods" name="@AfterMethod postCondition" time="-1.714491671404E9">
    <skipped/>
  </testcase> <!-- @AfterMethod postCondition -->
  <testcase classname="base.ProjectSpecificMethods" name="@BeforeMethod preCondition" time="-1.71449167141E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod preCondition -->
  <testcase classname="base.ProjectSpecificMethods" name="@AfterMethod postCondition" time="-1.714491671417E9">
    <skipped/>
  </testcase> <!-- @AfterMethod postCondition -->
  <testcase classname="base.ProjectSpecificMethods" name="@BeforeMethod preCondition" time="-1.714491671421E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod preCondition -->
  <testcase classname="base.ProjectSpecificMethods" name="@AfterMethod postCondition" time="-1.714491671432E9">
    <skipped/>
  </testcase> <!-- @AfterMethod postCondition -->
  <testcase classname="io.cucumber.testng.AbstractTestNGCucumberTests" name="runScenario" time="0.0">
    <skipped/>
  </testcase> <!-- runScenario -->
  <testcase classname="io.cucumber.testng.AbstractTestNGCucumberTests" name="runScenario" time="0.0">
    <skipped/>
  </testcase> <!-- runScenario -->
  <testcase classname="io.cucumber.testng.AbstractTestNGCucumberTests" name="runScenario" time="0.0">
    <skipped/>
  </testcase> <!-- runScenario -->
  <testcase classname="io.cucumber.testng.AbstractTestNGCucumberTests" name="runScenario" time="0.0">
    <skipped/>
  </testcase> <!-- runScenario -->
  <testcase classname="io.cucumber.testng.AbstractTestNGCucumberTests" name="runScenario" time="0.0">
    <skipped/>
  </testcase> <!-- runScenario -->
</testsuite> <!-- Default test -->
